# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    timeout-minutes: 70

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm install
    - run: npm run lint
    - run: npm run build --if-present
    - name: Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: Dist
        path: dist 
  cypress-run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      # Install NPM dependencies, cache them correctly
      # and run all Cypress tests
      - name: Service Dependencies Ready
        run: npm ci
      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          start: npm start
          wait-on: 'http://localhost:4200'
      - name: Artifacts
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
  deployment:
    runs-on: ubuntu-latest
    environment: production
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Download a single artifact
        uses: actions/download-artifact@v3
        with:
          name: Dist
      - name: deploy
        uses: mdallasanta/ssh-scp-deploy@v1.2.0
        with:
          local: '/home/runner/work/SurRealFront/SurRealFront'
          remote: '~/surreal/front/dist'
          host: ${{secrets.HOST}}
          port: ${{secrets.PORT}}
          user: ${{secrets.USERNAME}}
          key: ${{secrets.PRIVATE_KEY}}
          pre_upload: echo "This will be executed before the upload!"
          post_upload: echo "This will be executed after the upload!"
          ssh_options: -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null
          scp_options: -v
